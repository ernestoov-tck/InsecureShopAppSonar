name: Snyk Security Analysis

on:
  pull_request:
    branches:
      - main

jobs:
  checkout:
    name: Checkout and Setup
    runs-on: ubuntu-latest
    outputs:
      snyk-token: ${{ secrets.SNYK_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
      
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

  snyk-analysis:
    name: Snyk Analysis
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install Snyk CLI
        run: npm install -g snyk
      
      - name: Run Snyk Code Test
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk code test --json-file-output=snyk.json
      
      - name: Upload JSON file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: snyk-json
          path: snyk.json

  snyk-format:
    name: Format and Comment
    runs-on: ubuntu-latest
    needs: snyk-analysis
    steps:
      - name: Download snyk.json artifact
        uses: actions/download-artifact@v3
        with:
          name: snyk-json
      
      - name: Format Snyk Code Results
        id: snyk_code_results
        run: |
          echo "## üõ†Ô∏è Snyk Code Issues" > snyk-comment.md
          jq -r '
            "
            ## üõ†Ô∏è Snyk Code Issues
            <details>
            <summary>üîΩ **Expand to view all issues**</summary>
          
            " +
            (
              .runs[].results[] |
              "
              ### üö® **[\(.ruleId)]** - \(.message.text)
              | **Severity**         | **Priority Score** |
              |-----------------------|--------------------|
              | \(.level | ascii_upcase) | \(.properties.priorityScore) |
          
              üìÇ **Location**
              - **File:** [\(.locations[].physicalLocation.artifactLocation.uri)](https://github.com/your-repo/blob/main/\(.locations[].physicalLocation.artifactLocation.uri)#L\(.locations[].physicalLocation.region.startLine))
              - **Line:** \(.locations[].physicalLocation.region.startLine)
          
              <details>
              <summary>üìú **Description** (click to expand)</summary>
              
              Unauthenticated input flows into a critical function. Ensure input is validated before passing to `\(.locations[].physicalLocation.region.startLine)`.
              
              </details>
          
              <details>
              <summary>üõ†Ô∏è **Details** (click to expand)</summary>
          
              - **Fingerprints:**
                \(.fingerprints | to_entries | map("- `\(.key): \(.value)`") | join("\n      "))
              - **Autofixable:** \(.properties.isAutofixable)
          
              </details>
              
              ---
              "
            ) +
            "
            </details>
            "
          ' snyk.json >> snyk-comment.md

      - name: Upload MD file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: snyk-comment
          path: snyk-comment.md

  comment-on-pr:
    name: Post Comment on PR
    runs-on: ubuntu-latest
    needs: snyk-format
    steps:
      - name: Download snyk-comment.md artifact
        uses: actions/download-artifact@v3
        with:
          name: snyk-comment
      
      - name: Comment on Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const comment = fs.readFileSync('snyk-comment.md', 'utf8');
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment,
            });
